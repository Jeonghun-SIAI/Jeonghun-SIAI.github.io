<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>에너지엔데이터연구소</title>
    <description>공학박사 과정에서 쌓은 에너지 시스템 전문성에 데이터 사이언스 석사를 더하며 쌓은 계산통계학 활용 역량을 결합하여, 데이터 기반의 에너지 시스템/ 정책/ 시장 관련 솔루션 도출을 올바르게 할 수 있도록 돕습니다.</description>
    <link>https://song4energyndata.github.io/</link>
    <atom:link href="https://song4energyndata.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 03 Sep 2023 22:20:15 +0900</pubDate>
    <lastBuildDate>Sun, 03 Sep 2023 22:20:15 +0900</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 12) Variants of ADMM and applications</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 12강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/MWPJAl84Sac&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;economic-dispatch&quot;&gt;Economic dispatch&lt;/h2&gt;

&lt;p&gt;여러 대의 발전기로 시간별 수요를 만족시키는 최소비용의 스케줄을 구하는 문제에서는, 각 수요-공급 일치 조건이 complicating constraint이다. 해당 제약조건에 모든 발전기의 출력 항들이 포함되기 때문으로, 해당 제약조건을 relax하면 각 발전기 별 subproblem으로 나눌 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_25.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 예제에서는 목적함수가 quadratic function이므로, Lagrangian Relaxation (LR) 을 적용할 수 있다.&lt;/p&gt;

&lt;p&gt;Complicating constraint인 수요-공급 일치 제약에 dual variable $\lambda$을 곱한 항을 목적함수에 추가하고, dual variable의 값을 $\bar{\lambda}$ 로 고정하면, 각 발전기 별 subproblem으로 나눌 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_27.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 각 발전기 별 subproblem을 풀어 $v$번째 iteration 기준 $p_g^{(v)}$를 구하고, 이를 통해 아래와 같이 $\bar{\lambda}^{(v)}$를 $\bar{\lambda}^{(v+1)}$로 업데이트한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_35.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 때 $\bar{\lambda}^{(v)}$는 수요-공급 일치 제약에 대한 dual variable이므로 ‘가격’이기도 하다. 여기서는 각 발전기 별로 자신의 이익을 최대화하는 발전량을 설정하고, 이를 모두 취합한 market operator가 가격을 업데이트한 후 다시 발전기들에게 통보한다. 그리고 각 발전기는 수정된 가격에 대해 발전량을 재설정하고, market operator는 이를 다시 취합해 가격을 업데이트하는 과정을 수렴할 때까지 반복한다.&lt;/p&gt;

&lt;p&gt;이런 식으로 가격을 iterative하게 결정하는 시장을 Walrasian auction이라고 한다.&lt;/p&gt;

&lt;p&gt;이러한 ‘distributed’ technique 기반으로 가격을 결정하는 방법은, 시장에 여러 가지 externalities가 추가되어 시장 균형 문제가 더 이상 동치인 최적화 문제를 갖지 않는 경우에 특히 유용한 것으로 알려져 있다.&lt;/p&gt;

&lt;h2 id=&quot;market-clearing-with-linear-offers&quot;&gt;Market clearing (with linear offers)&lt;/h2&gt;

&lt;p&gt;Market clearing problem에서도 수요-공급 일치 조건이 complicating constraint이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_42.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만약 위 예제처럼 목적함수가 quadratic이 아니라 linear function이면, ‘augmented’ LR을 사용해야 한다. 그러므로 목적함수에 complicating constraint의 제곱항을 추가한다 (regulization coefficient $\gamma/2$를 곱해서).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_45.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;단, 이 경우 $\lambda$의 값을 $\bar{\lambda}$로 고정해도 각 발전기 별 subproblem으로 바로 나눌 수 없다. Complicating constraint의 제곱항 내에 변수들 간 product term이 있기 때문이다. 그러므로 각 발전기에 대해, 나머지 발전기들의 발전량을 고정하여 구성한 문제를 푼다 (ADMM). 각 발전기 별 최적의 발전량을 기반으로, $\bar{\lambda}$가 업데이트된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_50.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;privacy-이슈를-고려한-exchange-admm&quot;&gt;Privacy 이슈를 고려한 Exchange ADMM&lt;/h2&gt;

&lt;p&gt;위 슬라이드의 ADMM에는 한 가지 ‘실질적인’ 문제가 있다. 발전기 1번의 ($v$번째 iteration에서의) 발전량을 계산하려면 발전기 2와 발전기 3의 ($v-1$번째 iteration에서의) 발전량 정보가 발전기 1에 전달되어야 하는데, 이는 ‘privacy 침해’로 볼 수 있기 때문이다.&lt;/p&gt;

&lt;p&gt;그러나 문제의 식을 아래 슬라이드와 같이 ‘모든 발전기들의 발전량들의 평균’을 도입해 변형하면, 이러한 ‘privacy 침해’ 문제를 완화할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_59.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 발전기는 $v-1$번째 iteration에서의 자기 자신의 발전량 $x_i^{(v-1)}$ 및 ‘모든 발전기들의 발전량들의 평균’ $\bar{x}^{(v-1)}$ 을 알면, $x_i^{(v)}$를 계산할 수 있다. 즉 각자의 발전량 정보는 market operator에게는 전달되지만, 다른 개별 발전기들에게는 전달되지 않기 때문에 privacy 침해 문제가 완화된다. 이를 ‘exchange’ ADMM이라 한다.&lt;/p&gt;

&lt;h2 id=&quot;consensus-admm&quot;&gt;Consensus ADMM&lt;/h2&gt;

&lt;p&gt;모든 subproblem들에 공통으로 포함된 complicating variable이 있을 경우 이를 Bender’s decomposition으로 푸는 대신, ADMM 방식으로 풀 수도 있다.&lt;/p&gt;

&lt;p&gt;아래 슬라이드에서는, 원래 문제에서의 complicating variable $x$를 각 subproblem $i$ 별로 $x_i$라는 변수로 두고, 대신 $x_i$가 공통의 값 $z$와 같다는 제약을 추가했다. 이 문제에서 $z$는 parameter가 아닌 변수임에 주의한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_67.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;$x_i=z$는 complicating constraint이다. 그러므로, 각 subproblem별 목적함수에 제약 $x_i-z=0$의 좌변에 dual variable을 곱한 항과 좌변의 제곱에 regularization coefficient를 곱한 항을 추가 후 dual variable과 $z$의 값을 고정해 ADMM 스타일의 문제를 아래와 같이 구성할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_71.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각각의 $x_i$가 전부 특정 값 $z$로 같아야 한다는, 즉 ‘consensus를 이뤄야 한다는’ 제약이 있어, 이를 consensus ADMM이라 한다.&lt;/p&gt;

&lt;p&gt;여기서 난점은, $\bar{\lambda}$ 뿐 아니라 complicating variable이 최종적으로 가져야 할 값 $z$도 업데이트해야 한다는 것이다.&lt;/p&gt;

&lt;p&gt;다행히도, $z$를 업데이트하는 문제는 아래와 같이 analytic solution을 가진다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_74.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;$N^{-1} \sum_{i=1}^N x_i^{(v)}$를 $\bar{x}^{(v)}$로 쓰면, 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_78.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 식들을 적절히 결합하면, 최종적으로 $z$가 사라진 아래와 같은 알고리즘을 얻는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_84.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;즉 $v$번째 iteration에서 각 $x_i^{(v)}$는, $v-1$번째 iteration에서의 $x_i^{(v-1)}$들의 평균 $\bar{x}^{(v-1)}$ 으로부터 멀어질수록 penalty를 가하는 목적함수에 의해 결정된다. 이 penalty가 zero가 되는 시점은 모든 $x_i^{(v)}$들이 같아질 때, 즉 consensus를 이룰 때이다. (이러한 방법을 progressive hedging이라고도 한다.)&lt;/p&gt;

&lt;p&gt;Consensus ADMM은 stochastic market clearing에서 하루전 시장에서의 급전변수들을 결정할 때, 전력 네트워크에 여러 개의 node들이 있을 때 각 node 개별의 ‘distributed optimal power flow’ 문제들로 나눌 때 쓸 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture12_91.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalalgeight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalgnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;b&gt; Variants of ADMM and applications&lt;/b&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 03 Sep 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalaltwelve.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalaltwelve.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 11) (Augmented) Lagrangian relaxation</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 11강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/MWPJAl84Sac&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;complicating-constraint가-있을-경우의-lagrangian-relaxation-lr&quot;&gt;Complicating constraint가 있을 경우의 Lagrangian Relaxation (LR)&lt;/h2&gt;

&lt;p&gt;에너지시스템 최적화 문제에서는 수요-공급 일치 조건, ramping limit 조건, 두 지역을 잇는 송전선 관련 조건 등이, ‘여러 소문제들의 변수들을 포함하는’ complicating constraint로써 포함되곤 한다. 해당 제약을 relax해서 큰 문제 대신 작은 subproblem들을 풀 수 있다.&lt;/p&gt;

&lt;p&gt;(이를테면 여러 지역을 잇는 송전 제약을 relax하면, 각 지역 별 market clearing problem을 따로 푸는 문제로 변환될 수 있다.)&lt;/p&gt;

&lt;p&gt;핵심은, 아래와 같이 complicating constraint들을 dual variable을 곱한 term으로 목적함수에 포함시키는 것, 그리고 dual variable들을 특정 값으로 고정하는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture11_20.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture11_24.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture11_28.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Complicating constraint가 아닌 constraint는 그대로 두고 complicating constraint들만을 목적함수에 포함시키므로, 이는 ‘partial’ Lagrangian으로 볼 수 있다. 그래서 이 기법의 이름이 Lagrangian Relaxation (LR) 이다.&lt;/p&gt;

&lt;p&gt;Dual variable의 값을 고정함으로써, 위 예시 기준으로 각 $i$별 subproblem들이 구성된다. 단, 해당 고정값이 최적의 값인지 모르므로, iteration을 통해 최적의 값에 가까워지게 해야 한다.&lt;/p&gt;

&lt;p&gt;간단한 예시는 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture11_34.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture11_35.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Complicating constraint $-x-y+4=0$에 dual variable $\mu$를 곱한 값을 목적함수에 더한 후 $\mu$의 값을 $\bar{\mu}$로 고정 후 $x$와 $y$ 각각에 대한 subproblem을 푼다. 그 결과 얻은 variable들의 값들 $x^{(v)}$와 $y^{(v)}$에 기반해 $\bar{\mu}$를 업데이트한다.&lt;/p&gt;

&lt;p&gt;이 때 $a$와 $b$는 일종의 hyperparameter로, 그 값에 따라 수렴 속도 및 안정성이 달라진다. (Bender’s decomposition에서는 이런 hyperparamter가 없었다. 그래서 필자가 보기엔 LR은 약간은 ‘learning’ 요소가 있는 기법이다.)&lt;/p&gt;

&lt;h2 id=&quot;목적함수가-linear-function일-때의-augmented-lr&quot;&gt;목적함수가 linear function일 때의 ‘Augmented’ LR&lt;/h2&gt;

&lt;p&gt;주의할 점은, LR을 그대로 쓰려면 목적함수의 first derivative가 연속함수여야 한다는 것이다. 이 연속함수는 상수함수를 포함하지 않는다. 따라서 위 예제처럼 목적함수가 quadratic function인 경우 LR을 쓸 수 있지만, 만약 목적함수가 linear function이라면 LR을 쓸 수 없다 (정확히는 쓰더라도 수렴이 보장되지 않는다).&lt;/p&gt;

&lt;p&gt;목적함수가 linear function이지만 complicating constraint를 relax해 subproblem들로 쪼개고 싶은 경우 쓸 수 있는 방법으로, ‘Augmented’ Lagrangian Relaxation (ALR) 이 있다.&lt;/p&gt;

&lt;p&gt;ALR에서는 목적함수를 확실하게 quadratic function으로 만들기 위해, complicating constraint의 제곱항을 추가한다. 예시는 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture11_41.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(위 예시에서 목적함수가 이미 quadratic이므로 굳이 ALR을 쓸 필요가 없지만, 이해를 돕기 위해 앞의 LR 예시와 같은 예시로 설명하였다.)&lt;/p&gt;

&lt;p&gt;어차피 optimal point에서는 $-x-y+4=0$이므로, 위 항을 추가해도 여전히 같은 문제를 푸는 셈이다. 위 식에서 $\gamma$는 regularization hyperparameter로 볼 수 있다.&lt;/p&gt;

&lt;p&gt;단, 위 문제에서는 $\lambda$를 고정시키더라도 $x$와 $y$ 각각의 subproblem으로 쪼갤 수 없다. $(-x-y+4)^2$ 가 $xy$, 즉 product term을 포함하기 때문이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture11_43.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;alternating-direction-method-of-multipliers-admm&quot;&gt;Alternating Direction Method of Multipliers (ADMM)&lt;/h2&gt;

&lt;p&gt;Product term 때문에 문제를 쪼갤 수 없다면, 차선책은 product term에 있는 변수 중 하나를 고정시키고 나머지 변수에 대한 문제를 푸는 것이다. 이러한 방법을 alternating direction method of multipliers (ADMM) 이라 한다.&lt;/p&gt;

&lt;p&gt;위 예시에 ADMM을 적용하는 과정은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture11_55.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 윗첨자가 $(v)$인 항들이 변수이고, 윗첨자가 $(v-1)$인 항들은 parameter들이다 (이전 iteration에서 구한 값들). Optimal point에서는 $-x-y+4=0$ 이므로, $\lambda^{(v)} \approx \lambda^{(v-1)}$ 이면 optimal point에 수렴한 것으로 본다.&lt;/p&gt;

&lt;p&gt;$\gamma$가 일종의 learing rate 역할을 하므로, 이를 너무 크거나 작지 않게 적절히 결정해 주어야 한다.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalalgeight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalgnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;b&gt; Augmented Lagrangian relaxation&lt;/b&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 02 Sep 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalaleleven.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalaleleven.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 10) Applications of Bender&apos;s decomposition</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 10강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/NOBde8kEOj0&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;generation-expansion-planning&quot;&gt;Generation expansion planning&lt;/h2&gt;

&lt;p&gt;아래 문제는 기존 두 개의 발전기에 더해 새로 도입되는 세 번째 발전기의 용량 $x_3$을 결정하되, 각 시간별 수요-공급 일치 및 발전기 별 운전 범위 조건을 만족시키면서 ‘발전기 건설비와 모든 시간의 운영비용의 합’을 최소화하도록 결정하는 설비 확장 (generation expansion) 문제이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_8.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;$x_3$의 값을 고정하면, 각 시간 ($h$) 별로 subproblem을 구성할 수 있다. 주어진 $x_3$에 대해 각 시간 별 발전기들의 최적 출력을 결정하는 subproblem은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_11.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Master problem의 optimality cut을 compact form으로 구성하기 위해, $x_3^{(i)}$을 변수로 두되 해당 변수의 값을 고정하는 제약조건 $x_3^{(i)} = x_3^{fixed}$ 를 두었다. 해당 제약에 대응하는 dual variable $\lambda_h$가 $h$별로 다른데, 이는 각 시간 별 전기부하 $D_h$가 얼마냐에 따라 optimal solution이 달라지므로 dual variable도 $h$별로 다르기 때문이다.&lt;/p&gt;

&lt;p&gt;$x_3$의 값을 업데이트하기 위한 master problem은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_18.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;$\alpha^{(i)}$에 대한 제약조건의 우변이 모든 $h$에 대한 합임에 주의한다. $\alpha^{(i)}$가 목적함수의 $x$를 제외한 변수들에 대한 항들을 대신하는 auxiliary variable인데, 해당 항들은 ‘모든 시간에 대한 운영비용의 합’이기 때문이다.&lt;/p&gt;

&lt;p&gt;또한 제약조건이 총 $i-1$개임에 주의한다 (1번째, 2번째, …, $i-1$번째 iteration에서의 값들)&lt;/p&gt;

&lt;h2 id=&quot;scenario-based-stochastic-programming&quot;&gt;Scenario based stochastic programming&lt;/h2&gt;

&lt;p&gt;불확실성이 큰 재생발전기가 있을 때, 하루전 시장에 대해서는 재생발전기 발전량 시나리오에 관계없이 단일한 급전계획을 도출하고, 실시간 시장에 대해서는 각 시나리오 별 급전 수정 계획을 도출함을 이전 강의에서 설명하였다.&lt;/p&gt;

&lt;p&gt;아래 슬라이드를 보면, stochastic market clearing problem에서 complicating variables는 하루전 (Day-Ahead) 시장에 대한 변수들이고 (파란색으로 표기됨), 해당 변수들을 고정하면 각 시나리오 별 subproblem들을 구성할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_68.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 시나리오 별 subproblem은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_70.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;목적함수를 보면 0.25가 곱해져 있다. 이는 해당 시나리오의 확률이다. 각 subproblem별 목적함수에는 대응하는 시나리오의 확률을 곱해주도록 한다.&lt;/p&gt;

&lt;p&gt;Master problem은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_75.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 주의할 점은, $\alpha^{(\theta)}$에 대한 제약조건의 우변에서, subproblem의 목적함수에 대응하는 부분에는 각 시나리오 별 확률을 곱해주지만, 그 뒤의 complicating variable들에 대한 부분에는 각 시나리오별 확률을 곱해주지 않는다는 것이다.&lt;/p&gt;

&lt;p&gt;이는 subproblem의 목적함수에 이미 각 시나리오 별 확률이 곱해져 있었기 때문에, complicating variable을 고정하는 제약에 대한 dual variable들 $\rho$가 ‘시나리오 별 확률만큼 scaling된’ sensitivity를 의미하기 때문이다. 그러므로 dual variable들을 전부 합하기만 해도, 각 시나리오 별 확률을 가중치로 하는 가중평균 sensitivity를 반영한 optimality cut을 생성하는 셈이 된다.&lt;/p&gt;

&lt;p&gt;위의 4개 시나리오에 대한 stochastic market clearing 문제를 Bender’s decomposition으로 풀면, 아래와 같이 5번의 iteartion으로 해를 얻는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture10a_79.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;정수-변수가-있을-경우에는&quot;&gt;정수 변수가 있을 경우에는?&lt;/h2&gt;

&lt;p&gt;에너지시스템 최적화 문제에는 정수가 많이 등장한다. 설비규모 변수가 용량 자체가 아닌 기기 숫자일 수 있고 (풍력터빈이 몇 대이냐 등), 각 시간별 subproblem을 기동/정지 여부를 나타내는 이진변수를 포함하는 unit commitment 문제로 고려해야 할 수도 있다.&lt;/p&gt;

&lt;p&gt;만약 Master problem에는 정수 변수가 있지만 subproblem들에는 정수 변수가 없을 경우, Bender’s decomposition을 적용할 수는 있다. 단, 이 경우 global optimum으로의 수렴이 보장되지 않음에 주의한다.&lt;/p&gt;

&lt;p&gt;만약 subproblem에 정수 변수가 있으면, 안타깝게도 Bender’s decomposition을 적용할 수 ‘없다’. 정수 변수가 포함된 문제를 풀 경우 dual variable을 계산할 수 없어, master problem에서 complicating variable의 sensitivity 기반의 optimality cut을 생성할 수 없기 때문이다.&lt;/p&gt;

&lt;p&gt;(필자도 개인적으로 관심을 갖는 주제 중 하나가 ‘unit commitment 제약을 고려한’ generation expanstion planning problem 풀이라서, 처음 이 사실을 알았을 때 좀 슬펐(?)다.)&lt;/p&gt;

&lt;p&gt;이러한 경우 사용할 수 있는 방법론으로 primal-Benders, Dantzig-Wolfe decomposition 등이 있다고 알려져 있으나, 매우 복잡한 방법들이다.&lt;/p&gt;

&lt;p&gt;현실적으로는 unit commitment 제약들을 ‘정수만 실수로 바꾸어서’ 구성한 문제를 풀어 용량변수의 값들을 도출 후, 해당 용량변수를 고정하고 일정 기간 (24시간 또는 48시간 정도) 동안의 unit commitment problem을 rolling 방식으로 푸는 것이 그나마 가능성 있는 방법으로 보인다. (단, 이 경우 용량변수의 값이 optimistic하게 계산되므로, 혹시라도 subproblem이 infeasible problem이 될 수 있으니 주의해야 한다.)&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;b&gt; Benders’ decomposition: Applications&lt;/b&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 27 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalalten.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalalten.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 9) Bender&apos;s decomposition</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 9강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/bJy4373v7Uo&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;complicating-variable의-값을-찾는-원리&quot;&gt;Complicating variable의 값을 찾는 원리&lt;/h2&gt;

&lt;p&gt;Bender’s decomposition은, 모든 소문제에 공통적으로 포함되는 ‘변수’인 complicating ‘variable’이 있을 때 사용하는 decomposition method이다.&lt;/p&gt;

&lt;p&gt;Complicating variable이 포함된 큰 문제를 여러 subproblem들로 쪼개기 위해서는, complicating variable의 값을 고정해야 한다. 그러면 그 고정값을 얼마로 해야 될까?&lt;/p&gt;

&lt;p&gt;Complicating variable을 $x$라 할 때, $x$가 가질 수 있는 각 값들 별로 나머지 변수들에 대해 문제를 풀어 얻은 목적함수 값들을 아래 슬라이드와 같이 plot할 수 있다고 하면, 목적함수가 최소가 되는 $x$값을 선택하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_15.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;$x$가 ‘신규’ 발전설비의 용량이고 위 plot에서의 목적함수가 총 비용 (건설비용과 운영비용의 합) 이라 하면,
$x$가 작아서 목적함수의 값이 큰 상황은 ‘발전설비 부족으로 전력 공급에 어려움을 겪을 경우의 운영비용 증가’,
$x$가 커서 목적함수의 값이 큰 상황은 ‘발전설비를 필요 이상으로 과하게 건설할 경우의 고정비용 증가’ 로 볼 수 있다.&lt;/p&gt;

&lt;p&gt;실제로는 위와 같은 plot을 미리 알 수 없다. 그러나 다행히도, 위 plot을 piecewise-linear function으로 근사하는 방법이 있다.&lt;/p&gt;

&lt;p&gt;먼저 $x$의 initial point를 정하고, 해당 $x$값으로 고정 후 목적함수를 계산한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_18.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture9_19.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음으로 해당 $x$값에서 목적함수의 sensitivity 값 기반으로 접선을 계산한다 (subproblem의 dual variable을 계산해 얻으며, 자세한 내용은 뒤에서 설명한다).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_20.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 접선을 기준으로 목적함수를 최소화하는 $x$값을 구하고, 해당 $x$에 대해 위 과정을 다시 수행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_21.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture9_22.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러면 접선 두 개가 이루는 piecewise-linear function이 생기는데, 해당 function을 기준으로 목적함수를 최소화하는 $x$값을 구하고, 해당 $x$에 대해 위 과정을 다시 수행한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_23.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture9_24.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 과정을 반복할수록, piecewise-linear function이 $x$값과 목적함수 간의 실제 관계와 유사해진다. 그러므로 이 과정을 수렴 조건이 만족될 때까지 반복한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_26.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(단, $x$값과 목적함수 간의 관계가 convex임을 전제로 한다. non-convex인 경우 local optimum에 도달할 수 있다. $x$가 벡터인 경우에도 $x$의 원소 각각에 대해 convex여야 한다.)&lt;/p&gt;

&lt;h2 id=&quot;benders-decomposition-알고리즘&quot;&gt;Bender’s decomposition 알고리즘&lt;/h2&gt;

&lt;p&gt;아래 슬라이드의 예제를 Bender’s decomposition으로 푼다고 하자. 여기서 $x$를 complicating variable로 본다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_31.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러면 $x$를 고정했을 때의 $y$에 대한 subproblem과, subproblem의 dual variable들 기반으로 구성할 수 있는 $x$에 대한 master problem은 아래 슬라이드와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_36.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Master problem에서 $\alpha^{(i)}$는 원래 문제의 목적함수에서의 $y$에 대한 term ($-y$) 을 대체하는 auxiliary variable이고, $i$는 iteration index이다 (여기서는 $i$가 1부터 시작한다고 둠). $\alpha^{down}$은 첫 번째 iteration에서 master problem을 bounded problem으로 만들기 위한 상수로, 크기가 매우 큰 음수이다.&lt;/p&gt;

&lt;p&gt;$\pi^{(k)}$, $\mu^{(k)}$, $\sigma^{(k)}$, $\gamma^{(k)}$ 는 $k$번째 iteration에서의 subproblem의 dual variable의 값들이다. 이 때 $k=1,2,\cdots,i-1$, 즉 직전 iteration까지의 ‘모든 iteration 각각에 대한’ 값들을 전부 모은 것임에 주의한다. 즉 $\alpha^{(i)}$에 대한 부등호 제약조건이 $i-1$개가 있는 것이다. 그리고 첨자 $(i)$만이 변수이고 첨자 $(k)$는 전부 parameter들임에 주의한다.&lt;/p&gt;

&lt;p&gt;$\alpha^{(i)}$에 대한 부등호 제약의 우변은 subproblem의 dual objective function이다. 실제로 $y$에 대한 subproblem의 Lagrangian을 쓰고 $y$ term들을 제거하면 ($y$ term들을 제거하지 않으면 unbounded problem이 됨), dual objective를 우변과 같이 얻는다. 그리고 $\alpha^{(i)}$는 최소화 대상이므로, $\alpha^{(i)}$는 $i-1$개의 dual objective 중 적어도 하나와 같은 값이 된다.&lt;/p&gt;

&lt;p&gt;Duality theorem에 의해 primal problem의 목적함수 (여기서는 $-y$)는 dual problem의 목적함수 ($\alpha^{(i)}$에 대한 부등호 제약의 우변) 보다 크거나 같다. 그러므로 subproblem을 풀어 얻은 subproblem의 목적함수의 값은 $\alpha^{(i)}$보다 크거나 같다.&lt;/p&gt;

&lt;p&gt;또한 subproblem이 linear programming problem이므로, optimal point에서는 primal problem의 목적함수와 $\alpha^{(i)}$가 서로 같을 것이다.&lt;/p&gt;

&lt;p&gt;그러므로 primal problem의 목적함수를 UB (upper bound) 로, $\alpha^{(i)}$를 LB (lower bound) 로 두고, $\vert UB - LB \vert \leq \epsilon$ 이 될 때까지 반복한다. 알고리즘은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_37.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;제약조건을-보다-간단히-쓰는-compact-form&quot;&gt;제약조건을 보다 간단히 쓰는 Compact form&lt;/h2&gt;

&lt;p&gt;위 설명대로라면, master problem의 $\alpha^{(i)}$에 대한 부등호 제약의 우변은 subproblem의 제약조건이 많을수록 매우 복잡해질 것이다 (dual variable 수가 늘어나므로). 게다가, 서두에 언급했던 $x$의 sensitivity를 기반으로 계산하는 방법도 아니다.&lt;/p&gt;

&lt;p&gt;$\alpha^{(i)}$에 대한 부등호 제약의 우변을 보다 간단하게 쓰는 compact form은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture9_42.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Subproblem에서 $x^{(i)}$를 형식적으로는 변수로 두되 맨 마지막 제약조건을 통해 그 값을 master problem에서 얻은 값으로 고정한다. 이 경우 어쨌든 제약조건은 맞으므로 $x^{(i)}$에 대한 sensitivity $\rho^{(i)}$를 구할 수 있다.&lt;/p&gt;

&lt;p&gt;Master problem에서는 subproblem의 목적함수 (여기서는 $-y^{(k)}$) 및 $x^{(k)}$에 대한 sensitivity $\rho^{(k)}$를 이용해서 $\alpha^{(i)}$에 대한 부등호 제약의 우변을 구성한다. 이는 훨씬 간단해진 compact form이자, 서두에 언급했듯 $x$의 sensitivity를 기울기로 하는 접선 계산이기도 하다.&lt;/p&gt;

&lt;p&gt;Compact form의 $\alpha^{(i)}$에 대한 부등호 제약의 우변이 original subproblem의 dual objective와 동치 (equivalent) 임은 KKT condition 비교를 통해 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;b&gt; Benders’ decomposition: Theory&lt;/b&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 26 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalalnine.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalalnine.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 8) Optimization problems with decomposable structure</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 8강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/kluugyDZ8qs&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;큰-문제를-작은-문제들로-쪼개기&quot;&gt;큰 문제를 작은 문제’들’로 쪼개기&lt;/h2&gt;

&lt;p&gt;에너지 시스템에 대한 최적화 문제는 종종 그 크기가 크다. 매우 많은 시간들을 포함하기 때문일 수도 있고, stochastic programming에서 매우 많은 시나리오들을 고려하기 때문일 수도 있다.&lt;/p&gt;

&lt;p&gt;문제의 크기가 극단적으로 크면 현재의 컴퓨터로 풀지 못하는 (intractable) 문제가 될 수 있으며, 풀리긴 하더라도 필요한 시간 내에 풀어야만 할 수도 있다. 이를테면 하루전 시장에서의 급전계획을 결정하는 문제의 경우, 몇 시간 안에는 풀려야 다음 날의 실시간 시장에 결과 반영이 가능하다.&lt;/p&gt;

&lt;p&gt;그런데 에너지 분야에서는, 큰 최적화 문제가 종종 작은 최적화 문제들로 쪼개질 수 있다. 매우 많은 시간들을 포함하는 문제를 시간별 소문제들로 쪼갠다든지, 매우 많은 시나리오들을 고려하는 문제를 시나리오별 소문제들로 쪼갤 수 있다. 당연히 각 소문제는 원래 문제 대비 쉽게 풀린다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture8_4.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;작은 문제들로 쪼갤 수 있는 구조를 갖고 있지만 그 자체로는 큰 단일 문제인 최적화 문제의 경우, 바로 작은 문제들로 쪼개지 못하도록 만드는 변수 (complicating variables) 혹은 제약조건 (complicating constraints) 이 있다. 아래 두 슬라이드가 각각의 예시를 보여준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture8_16.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture8_24.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;에너지 분야에 대한 간단한 예시들은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture8_37.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture8_41.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture8_50.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Generation expansion problem에서는, 일반적으로 investment variable (설비 용량 등) 을 complicating variable로 보고 fix하는 것이 좋다.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;b&gt; Optimization problems with decomposable structure&lt;/b&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 25 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalaleight.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalaleight.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 7) Bilevel programming in energy systems</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 7강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/STQRFr4praA&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;발전사업자가-정직하지-않을-경우의-시장&quot;&gt;발전사업자가 ‘정직하지 않을’ 경우의 시장&lt;/h2&gt;

&lt;p&gt;지금까지의 강의들에서는 모든 발전사업자가 자기 소유 발전기의 발전비용 (production cost) 을 offer price로써 ‘정직하게’ 설정한다고 가정했다. 그리고 이 때 social welfare가 최대화됨을 보였다.&lt;/p&gt;

&lt;p&gt;그러나 만약에, 가격 결정의 key를 쥐고 있는 ‘marginal’ producer (수요-공급 일치점에 해당하여 자신의 offer price가 곧 market clearing price가 되는 공급자) 가 offer price를 production cost보다 높게 설정하는 ‘strategic’ offering을 했다고 하자. (이를 exercising market power 라 한다)&lt;/p&gt;

&lt;p&gt;그 결과, market clearing price는 증가하고, 전체 전력 공급량은 감소한다 (아래 슬라이드 참고).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_8.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 때, marginal producer의 수익은 증가할까?&lt;/p&gt;

&lt;p&gt;이는 marginal producer의 판매량에 따라 다르다. 판매가격은 증가했지만, 전체 전력 공급량은 감소했다. 만약 전력 공급량 감소에 의해 marginal producer의 판매량이 크게 감소하면, marginal producer의 수익은 감소할 수도 있다. (물론 실제로는 marginal producer도 이를 예상하고 본인의 수익이 증가할 것 같을 때에만 strategic offering을 수행할 것이다)&lt;/p&gt;

&lt;p&gt;Marginal producer를 제외한 나머지 (전력수급 스케줄에 포함된) 발전사업자들의 수익은 증가한다. 판매량은 변하지 않는데 시장가격이 올랐기 때문이다. (일종의 free-rider로 볼 수 있다)&lt;/p&gt;

&lt;p&gt;또한 startegic offering의 결과, social welfare는 감소한다 (아래 슬라이드 참고).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_10.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3강에서 보았듯 LMP-based market은 incentive compatibility가 충족되지 않는 시장이므로, 각 참여자들이 자신의 진짜 정보가 아닌 가짜 정보를 이용할 위험이 있다.&lt;/p&gt;

&lt;h2 id=&quot;strategic-offering을-stackelberg-game으로-모델링&quot;&gt;Strategic offering을 Stackelberg game으로 모델링&lt;/h2&gt;

&lt;p&gt;시장은 근본적으로 여러 참가자들이 각자의 이익 최대화를 목표로 하는 상호작용 공간이므로, game으로 모델링할 수 있다. 실제로 생산량 기반 경쟁을 모사하는 Cournot competition, 가격 기반 경쟁을 모사하는 Bertrand competition, 이들 모델보다 더 전력시장의 모습에 가까운 supply function model 등이 사용될 수 있다.&lt;/p&gt;

&lt;p&gt;그러나 위 모델들은 기본적으로 ‘생산량과 가격 간 관계가 affine function이다’ 라고 전제하는데, 실제로는 그렇지 않다. 그러므로 이러한 전제를 필요로 하지 않는 다른 game 모델이 필요하다.&lt;/p&gt;

&lt;p&gt;Strategic offering을 하는 발전사업자가 자신의 offer price를 결정하면, market operator는 해당 offer price를 ‘주어진 것으로 받아들이고’ market clearing을 수행한다.&lt;/p&gt;

&lt;p&gt;그러므로 strategic offering을 하는 발전사업자를 leader로, market opeartor를 follower로 보면, 전형적인 Stackelberg game이 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_27.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Stackelberg game에서는 leader가 follower의 모델을 알고 있다고 가정하고, leader가 follower의 model에 기반해 자신의 선택에 대한 follower의 대응을 ‘예상해서’ 의사결정을 한다.&lt;/p&gt;

&lt;p&gt;그러므로, leader의 의사결정에 대한 최적화 문제는 leader 자신에 대한 제약조건 뿐 아니라, follower의 의사결정에 대한 최적화 문제 자체를 제약조건으로 갖는 bi-level problem이 된다 (아래 슬라이드 참고).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_32.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture7_37.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follower 입장에서의 lower-level problem에서는 leader의 의사결정이 변수가 아닌 parameter이다. Leader 입장에서의 upper-level problem에서는 leader의 의사결정과 follower의 의사결정 모두가 변수이지만, follower의 의사결정은 lower-level problem을 전제로 이루어진다.&lt;/p&gt;

&lt;h2 id=&quot;stackelberg-game-bi-level-problem을-푸는-방법&quot;&gt;Stackelberg game bi-level problem을 푸는 방법&lt;/h2&gt;

&lt;p&gt;Bi-level problem을 푸는 일반적인 방법은, lower-level problem의 KKT condition을 upper-level problem의 제약조건으로 두는 것이다. Optimal point에서는 lower problem의 KKT condition도 만족되어야 하기 때문이다. 이 경우, 최적화 문제를 제약으로 갖지 않는 평범한(?) 최적화 문제가 된다.&lt;/p&gt;

&lt;p&gt;(이러한 문제를 Mathematical Program with Complementarity Constraint (MPCC) problem이라 하며, 특히 전력시장처럼 lower-level problem이 equilibrium을 구하는 문제인 경우에는 Mathmatical Program with Equilibrium Constraint (MPEC) problem이라 한다.)&lt;/p&gt;

&lt;p&gt;여기서 난점은, KKT condition 중 complementary slackness 조건에 의해 lower-level problem의 primal variable들과 dual variable들이 곱해져 product term들이 생기므로 nonlinear problem이 된다는 것이다.&lt;/p&gt;

&lt;p&gt;이 때 각 product term에 대해 이진변수와 큰 계수 기반의 big-M approach를 쓰면, mixed-integer ‘linear’ problem으로 만들 수 있다 (아래 슬라이드 참고).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_55.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 strategic offering을 모사하는 최적화 문제를 보자. Bi-level problem은 아래 슬라이드와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_76.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Market operator에 대한 lower-level problem의 KKT condition들을 도출하고 이를 big-M approach를 써서 이진변수 기반 선형 조건들로 변환한 문제는 아래 슬라이드와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_87.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 또다른 난점이 있다. 목적함수에 있는 $p_i \lambda$ 항이 nonlinear term이란 것이다. $p_i$는 발전사업자의 판매량이고 $\lambda$는 가격인데, 둘 다 변수이기 때문이다.&lt;/p&gt;

&lt;p&gt;Mixed-integer ‘non’linear programming problem은 어떤 상용 solver로도 쉽게 풀 수 없는, 대단히 어려운 문제이다. 따라서 이를 동치인 선형 문제로 변환할 필요가 있으며, 다행히 이 문제에서는 변환이 가능하다.&lt;/p&gt;

&lt;p&gt;아래 슬라이드가, $\sum_i p_i \lambda$ 항을 동치인 linear term들로 표현하는 과정이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_95.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lower-level problem은 linear programming problem이므로 항상 strong duailty가 성립한다. 그러므로 step 1에서는 primal objective와 dual objective 간의 등식을 쓴다.&lt;/p&gt;

&lt;p&gt;Step 2에서는 KKT condition의 zero first derivative 조건들 중 $\lambda$가 있는 조건을 쓰고, 여기에 $p_i$를 곱한 후 $i$에 대해 합한다. 그러면 step 1의 식을 대입해서, $\sum_i p_i \lambda$ 항을 동치인 linear term들로 표현할 수 있다.&lt;/p&gt;

&lt;p&gt;최종적인 mixed-integer ‘linear’ programming problem은 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_96.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;여러-명이-strategic-offering을-하는-경우는&quot;&gt;‘여러 명이’ strategic offering을 하는 경우는?&lt;/h2&gt;

&lt;p&gt;위 내용들은 모두 ‘한 명의 발전사업자가’ strategic offering을 수행하는 경우의 MPEC problem에 대한 설명이었다.&lt;/p&gt;

&lt;p&gt;그러나 실제 시장에서는, strategic offering을 할 유인이 있는 발전사업자들이 여러 명일 것이다. 그리고 여러 명이 strategic offering 수행 시에도, 나름대로의 ‘균형’ 상태에서 market clearing이 이루어질 것이다.&lt;/p&gt;

&lt;p&gt;이러한 문제를 Equilibrium Problem with Equilbrium Constraints (EPEC) problem이라 하며, 이는 상당히 풀기 어려운 문제이다. 문제 자체의 크기도 클 뿐 아니라, 수렴이 보장되지 않고, 수렴하더라도 해당 해가 균형이 아닐 수 있는 등 여러 가지 이슈가 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture7_103.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;b&gt; Bilevel programming in energy systems&lt;/b&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 23 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalalseven.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalalseven.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 6) Robust approaches for market clearing</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 6강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/GoZbvRV1FMs&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;worst-case-scenario&quot;&gt;Worst-case scenario&lt;/h2&gt;

&lt;p&gt;이전 강의에서의 시나리오 기반 stochastic market clearing에서는, 하루전 시장 비용과 각 시나리오 별 실시간 시장 비용의 ‘기대값’의 합을 최소화하는 급전계획을 수립하였다.&lt;/p&gt;

&lt;p&gt;여기서 더 보수적으로 접근한다면, ‘총 비용이 가장 많이 발생하는 시나리오’의 총 비용을 최소화하고자 할 수 있다. 즉 ‘worst-case’ 의 비용을 최소화하는 것이다.&lt;/p&gt;

&lt;p&gt;이러한 접근을 ‘robust’ market clearing이라 하며, 시나리오 기반 robust market clearing 문제는 아래 슬라이드와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_22.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;변수 $\beta$가 각 시나리오 별 실시간 시장 비용 중 최대값, 즉 worst-case에서의 실시간 시장 비용이다.&lt;/p&gt;

&lt;p&gt;비용은 worst-case 시나리오만을 기준으로 계산되지만, 다른 시나리오들에 대해서도 위 최적화 문제가 풀 수 있는 (feasible) 문제이어야 함에 주의한다.&lt;/p&gt;

&lt;p&gt;만약 풍력 발전량의 시나리오 4개가 각각 30MW, 60MW, 70MW, 40MW 일 경우 (네 번째 시나리오가 이전 강의에서의 10MW가 아님에 주의), robust market clearing 문제를 풀면 총 비용은 900달러이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_24.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 4개 시나리오들에 대해 stochastic market clearing 수행 시 총 비용의 ‘기대값’은 850달러로 robust market clearing에서의 비용보다 낮다.&lt;/p&gt;

&lt;p&gt;그러나 stochastic market clearing 기반으로 하루전 시장에서의 급전계획을 도출 후 실시간 시장에서 worst-case가 발생할 경우 (실제 풍력발전량이 30MW인 경우) 의 총 비용은 1200달러이다. 즉, robust market clearing을 통해 ‘최악의 상황에서의’ 비용을 1200달러에서 900달러로 낮추었다.&lt;/p&gt;

&lt;h2 id=&quot;worst-case를-어떻게-찾는가&quot;&gt;Worst-case를 어떻게 찾는가?&lt;/h2&gt;

&lt;p&gt;사실 위 문제처럼 풍력 발전기의 출력이 0 이상 70MW 이하인 경우, 엄밀히는 0에서 70MW까지의 모든 시나리오를 고려할 필요가 있으며, worst-case는 풍력 발전기의 출력이 0인 상황이다.&lt;/p&gt;

&lt;p&gt;만약 풍력 발전기가 한 대 더 있는 경우에도, worst-case는 두 풍력 발전기 모두의 출력이 0인 상황이다. 아래 슬라이드의 가로축은 풍력발전기 1의 출력, 세로축은 풍력발전기 2의 출력이다. 이 경우 원점이 worst-case임이 자명하다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_37.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 모든 풍력발전 출력 시나리오들은 ‘box’안에 있다. 이를 box uncertainty set이라 한다. Box uncertainty set에서는 worst-case가 꼭지점 중 하나이고 꼭지점 수가 적으므로 worst-case를 찾기 쉽다.&lt;/p&gt;

&lt;p&gt;그러나 실제 적용 시, worst-case를 이렇게 직관적으로 찾을 수 없는 경우가 많다.&lt;/p&gt;

&lt;p&gt;이를테면 여러 개의 발전원들을 다변화된 포트폴리오처럼 구성하여 ‘실질적으로는’ 모든 발전원의 출력이 0인 경우가 사실상 없다든지, correlation이 있어 위처럼 단순한 box 모양이 아니라 다면체 (polytope) 또는 타원 (ellipsoid) 꼴의 uncertainty set을 가진다든지 할 경우에는, worst-case를 직관적으로 찾을 수 없다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_38.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Uncertainty set을 수식으로 표현할 수 있을 경우, ‘시나리오를 쓰지 않고’ uncertainty set을 직접 최적화 문제에 명시하여 robust market clearing 문제를 구성할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_48.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 문제에서의 uncertainty set 수식은 $ 0 \leq W \leq 70 $ 이다.&lt;/p&gt;

&lt;p&gt;그런데 위 문제에서는 세 개의 최적화 문제가 계층적으로 (hierarchically) 중첩되어 있어 바로 풀 수 없다. 구체적으로는 min-max-min problem으로, 이를 풀기 위해서는 duality를 이용한 변환이 필요하다.&lt;/p&gt;

&lt;p&gt;실시간 시장에 대한 최소화 문제를 inner problem이라 할 때, 이 inner problem의 dual problem은 최대화 문제이다. 그러므로 inner problem의 dual problem을 바로 바깥의 최대화 문제와 합칠 수 있다 (아래 두 슬라이드 참고).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_58.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture6_61.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 난점은, 합쳐진 문제의 목적함수에 $W$와 dual variable 간 곱 (product), 즉 nonlinear term이 포함된다는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_63.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 문제를 푸는 한 가지 방법은, $W$의 값을 uncertainty set의 꼭지점 (vertex)의 값으로 ‘고정’하는 것이다. 그러면 linear problem이 되므로 빠르게 풀 수 있다. 이러한 linear problem을 각 vertex 별로 풀어서 목적함수를 비교할 수 있다.&lt;/p&gt;

&lt;p&gt;그러나 이는 vertex 수가 많으면 실행하기 어렵고, 실제로 vertex 수는 재생발전원 수에 지수적으로 (exponentially) 증가한다.&lt;/p&gt;

&lt;p&gt;위에서 소개한 풍력발전기들에 대한 box uncertainty set을 예로 들면, 풍력발전기가 $N$개 있을 때 꼭지점 수는 $2^N$개이다. 그러므로 풍력발전기가 스무 개 정도만 넘어가도, 실질적으로 쓸 수 없는 방법이 된다.&lt;/p&gt;

&lt;p&gt;만약 풍력발전기들 간의 correlation 등까지 고려해서 uncertainty set이 복잡한 모양을 갖게 되면 꼭지점 수는 더 증가할 것이다 (또는 uncertainty set이 타원형 등이어서 아예 vertex가 없을 수도 있다).&lt;/p&gt;

&lt;h2 id=&quot;제약조건이-만족될-확률-기반-문제-구성&quot;&gt;제약조건이 만족될 ‘확률’ 기반 문제 구성&lt;/h2&gt;

&lt;p&gt;Worst-case approach로 얻은 solution은 종종 지나치게 보수적이다 (conservative). 불확실성이 크더라도, 대개 worst-case보다는 나을 것이기 때문이다.&lt;/p&gt;

&lt;p&gt;이를 완화하는 한 가지 방법으로, 각 제약조건들이 항상 충족되는 것이 아니라 100퍼센트보다 낮은 어떤 ‘확률’로 충족될 것을 조건으로 두는 chance-constrained programming이 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_95.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Uncertainty $\Delta W$의 분포를 알고 있다고 가정하면 (최소한 충분한 데이터를 통해 근사 분포를 도출할 수 있다면), 위 제약조건이 충족될 확률도 계산 가능하다.&lt;/p&gt;

&lt;p&gt;Chance-constraints를 market clearing에 적용한 문제는 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_100.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기서 $p^{G2.RT}$, $p^{shed}$, $p^{spill}$은 $\Delta W$의 ‘함수’ 임에 유의한다. 이들은 실제 풍력발전량이 얼마인가에 따라 달라지는 변수들이기 때문이다.&lt;/p&gt;

&lt;p&gt;(여기서는 편의상 각각의 제약조건들이 ‘개별적으로’ $1 - \epsilon$의 확률로 충족된다고 하였으나, 실제로는 여러 제약조건들에 대한 ‘joint’ constraint가 필요할 수도 있다.)&lt;/p&gt;

&lt;p&gt;그러면 이 chance-constraint problem을 실제로 풀려면, 어떻게 해야 하는가?&lt;/p&gt;

&lt;p&gt;만약 uncertainty (위에서는 $\Delta W$) 의 분포가 정규분포인 case 등 특수한 몇몇 case에 해당한다면, analytical reformulation이 가능하다. 실제로 chance-constrained linear programming problem은 uncertainty가 정규분포라는 가정 하에 second-order cone programming (SOCP) problem으로 변환 가능함이 알려져 있다.&lt;/p&gt;

&lt;p&gt;그러나 위처럼 analytical reformulation이 가능한 확률분포로 가정할 수 있는 경우는 그리 많지 않다. 특히 재생발전원의 경우 true data generating process가 복잡하므로, 더더욱 가능성이 떨어진다.&lt;/p&gt;

&lt;p&gt;결국 확률분포로부터 sampling 수행 후 해당 sample들에 대해 제약조건이 만족된다는 조건을 설정하는 것이 현실적인 방안이다.&lt;/p&gt;

&lt;p&gt;아래 슬라이드를 보면, 주어진 $\epsilon$ 및 문제 크기 $n_x$와 confidence level $\beta$에 대해, $N$개 이상의 sample들에 대한 제약조건을 걸면 사실상 chance-constraint가 충족됨이 알려져 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_112.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러나 이 $N$값은 대개 매우 크므로, 문제도 매우 커져 풀기 곤란해진다. (이후 강의들에서 설명할 decomposition techniques를 쓰면 풀 수도 있다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_115.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만약 uncertainty의 차원이 작은 편이라면, 아래 슬라이드처럼 ‘approximate’ box uncertainty set을 구성하고 해당 set의 vertex들에 대해 문제를 풀 수도 있다 (단, 이 경우 robust optimization이 되므로 보다 보수적인 해를 얻는다).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_123.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;uncertainty의-분포를-모른다면&quot;&gt;Uncertainty의 분포를 모른다면?&lt;/h2&gt;

&lt;p&gt;위에서 설명했던 chance-constraint problem은 uncertainty에 대한 분포를 필요로 했다. 그런데  실제로는 그 분포를 모른다.&lt;/p&gt;

&lt;p&gt;이 경우 대안으로, ‘data generating process를 표현할 가능성이 있는 여러 개의 확률분포들’ 을 사용할 수 있다. 이러한 방법을 distributionally robust optimization (DRO) 라 한다.&lt;/p&gt;

&lt;p&gt;실제 확률분포를 모르기 때문에 말 그대로 여러 개의 확률분포’들’을 사용하며, 해당 확률분포들의 집합을 ambiguity set이라 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_138.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 슬라이드에서 각 chance constraint는, ambiguity set 내의 모든 확률분포들 각각에 대해 해당 제약조건이 충족될 확률을 계산했을 때 그 중 ‘가장 낮은 확률’ 이 $1 - \epsilon$ 이상이 되어야 한다는 조건이다.&lt;/p&gt;

&lt;p&gt;이 때 첫번째 chance constraint에 대해 충족 확률이 가장 낮은 (그러나 $1 - \epsilon$보다는 크거나 같은) 분포를 A라 하고, 두번째 chance constraint에 대해 충족 확률이 가장 낮은 분포를 B라 하면, A와 B는 서로 다를 수 있다.&lt;/p&gt;

&lt;p&gt;Historic data가 있을 경우, ambiguity set을 구성하는 방법으로 크게 두 가지가 있다 (metric-based, moment-based)&lt;/p&gt;

&lt;p&gt;Metric-based 방법으로는, sample들로 구성된 empirical distribution과 차이가 일정 수준 이하인 분포들로 ambiguity set을 구성한다. 여기서 ‘차이’는 Wasserstein distance 등이 될 수 있다 (아래 슬라이드 참고)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture6_154.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Moment-based 방법으로는, sample들의 first moment와 second moment를 (+ 필요 시 higher moments를) 계산 후, 해당 moment condition을 갖는 모든 확률분포들로 ambiguity set을 구성한다.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;b&gt; Robust approaches for market clearing&lt;/b&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 20 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalalsix.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalalsix.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 5) Stochastic market clearing</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 5강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/8rWrxtH_IsM&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;불확실성에-대응하기-위한-실시간-시장&quot;&gt;불확실성에 대응하기 위한 실시간 시장&lt;/h2&gt;

&lt;p&gt;태양광과 풍력 발전 비중이 높은 전력시스템에서는, 하루전 시장 (Day-Ahead Market) 에서 예상한 발전량과 실제 발전량 간 차이가 클 수 있다. 
이러한 차이는 수요-공급 간 불일치를 낳으므로, 실시간 시장 (Real-Time Market) 에서 다시 보정된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_9.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 그림은 하루전 시장에서 다음날의 특정 시점의 풍력 발전량을 30MW로 예측하고 실제로 해당 시점의 풍력 발전량도 30MW인 경우이다. 이 경우 재생 발전량과 실제 발전량이 동일하므로, 실시간 시장에서 추가되는 비용은 없다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_17.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러나 실제 발전량은 예측치와 다를 가능성이 높다.&lt;/p&gt;

&lt;p&gt;실제 풍력 발전량은 30MW인데 하루전 예측이 60MW인 경우 (즉 실제보다 낙관적으로 예측한 경우) 의 결과는 아래와 같다. 실제 풍력 발전량이 예측에 못 미치므로 실시간 시장에서 flexible generator G2 가동으로 인한 추가 비용이 발생한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_23.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;예측치가 실제 발전량과 같을 경우와 비교해서 총 비용이 증가한다 (900달러에서 1200달러로).&lt;/p&gt;

&lt;p&gt;실제 풍력 발전량은 30MW인데 하루전 예측이 70MW인 경우, 즉 예측이 더 지나치게 낙관적인 경우 아래 슬라이드와 같이 실시간 시장에서 매우 큰 비용이 발생하며 그 결과 총 비용이 더 크게 증가한다 (900달러에서 1900달러로).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_25.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만약 예측이 실제 대비 비관적이라면 어떨까? 실제 풍력 발전량은 30MW인데 하루전 예측이 10MW였다면? 이 경우 예측 대비 실제 풍력 발전량이 증가했으니 ‘공짜’ 전기가 생겨서 이득이지 않을까?&lt;/p&gt;

&lt;p&gt;그렇지 않다. 비록 flexible generator가 하루전 시장에서의 계획 대비 발전량을 줄이기 때문에 실시간 시장에서 음의 비용이 발생하긴 하지만, 대신 하루전 시장에서 화력발전기들이 많이 가동되도록 설정하므로 하루전 시장의 비용이 크다. 그 결과 총 비용은 역시 아래 슬라이드와 같이 증가한다 (900달러에서 1000달러로).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_27.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(재생발전량 예측은 일반적으로 해당 재생발전기를 소유한 사업자가 수행한다. Market operator는 정확한 예측에 대해 제도적 incentive를 주는 경우가 많다.)&lt;/p&gt;

&lt;h2 id=&quot;재생발전량의-시나리오-기반-접근&quot;&gt;재생발전량의 ‘시나리오’ 기반 접근&lt;/h2&gt;

&lt;p&gt;실제 재생발전량이 하루전 시장에서의 예측치와 다를 경우 총 비용이 증가했다. 이는 ‘단일한’ 예측치 사용을 전제로 했다.&lt;/p&gt;

&lt;p&gt;그렇다면, 단일한 예측치 하나만 쓰는 대신, 여러 개의 가능한 예측치들을 각각의 ‘시나리오’로 두고 해당 시나리오들을 고려해 하루전 시장에서의 ‘stochastic’ market clearing을 수행하면 어떨까?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_35.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이를테면 위에서 고려했던 풍력 발전량 예측치 30MW, 60MW, 70MW, 10MW 각각을 시나리오로 두고 하루전 시장에서 네 개의 시나리오를 고려한 stochastic market clearing을 수행한다고 하자.&lt;/p&gt;

&lt;p&gt;(‘편의상’ 각 시나리오의 확률은 같다고 (equiprobable) 가정한다. 실제로는 시나리오 별 확률이 다를 수 있다.)&lt;/p&gt;

&lt;p&gt;총 공급비용은 하루전 시장에서의 공급비용과 실시간 시장에서의 공급비용의 합이며, 실시간 시장에서의 공급비용은 시나리오별로 다르므로 모든 시나리오들을 고려한 ‘기대값’으로 계산되어야 한다.&lt;/p&gt;

&lt;p&gt;하루전 시장에서의 공급비용 + 실시간 시장에서의 공급비용의 ‘기대값’ 을 최소화하기 위한 최적화 문제는 아래 슬라이드와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_57.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;윗첨자 DA는 하루전 시장, RT는 실시간 시장을 의미한다. 아랫첨자 $\omega i$은 $i$번째 시나리오를 의미한다.&lt;/p&gt;

&lt;p&gt;$p^{G2.DA}$는 하루전 시장에서 flexible generator의 발전량을, $p_{\omega 1}^{G2.RT}$는 시나리오 1 하에서 실시간 시장에서 flexible generator의 발전량 ‘조정분’을 의미한다. 즉 실시간 시장에서 flexible generator의 실제 발전량은 $p^{G2.DA} + p_{\omega 1}^{G2.RT}$ 이다.&lt;/p&gt;

&lt;p&gt;$p_{\omega 1}^{shed}$는 풍력 발전량이 지나치게 적거나 해서 부하를 충족하지 못할 경우의 부하삭감 (load shedding) 을 의미한다. 전력을 공급받아서 누릴 수 있는 효용을 포기하는 것이므로 penalty cost가 발생한다 (이 문제에서는 MWh당 80달러로 설정되었으나, 실제로는 훨씬 클 것이다.)&lt;/p&gt;

&lt;p&gt;$p_{\omega 1}^{spill}$은 풍력 발전량이 지나치게 많을 경우의 출력제한 (curtailment) 양을 의미한다. 이 문제에서는 curtailment에 대한 비용 혹은 수익은 없다.&lt;/p&gt;

&lt;p&gt;맨 아래 제약조건은 실시간 시장에서의 수요-공급 일치 조건이다. 해당 식 자체로는 deviation of G2, deviation of wind, deviation of load 즉 세 개의 deviation의 합이 0임을 의미한다.&lt;/p&gt;

&lt;p&gt;아래의 식은 실시간 시장 수요-공급 일치 조건식이며, 여기에 하루전 시장의 수요-공급 일치 조건식을 대입하면 위 그림의 맨 아래 제약조건을 얻을 수 있다.&lt;/p&gt;

&lt;p&gt;$ p^{G1.DA} + (p^{G2.DA} + p_{\omega 1}^{G2.RT}) + (30 - p_{\omega 1}^{spill}) = 120 - p_{\omega 1}^{shed} $&lt;/p&gt;

&lt;p&gt;Market clearing price는 각 수요-공급 일치 제약에 대한 dual variable들이다. 하루전 시장에서의 price와 실시간 시장에서의 시나리오 별 price가 다름에 유의한다 (아래 슬라이드 참고).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_60.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 문제를 풀면, 총 ‘기대’비용은 1000달러가 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture5_63.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;실제 발전량이 30MW일 때의 총 비용은 1000달러로, 이는 단일 예측치만 사용하고 예측이 정확할 (30MW일) 때의 총 비용 (900달러) 보다는 높다.&lt;/p&gt;

&lt;p&gt;그러나 예측이 틀렸을 경우까지 고려한 총 비용은 상대적으로 줄어든다.&lt;/p&gt;

&lt;p&gt;앞에서 단일 발전량 예측치가 60MW일 때, 70MW일 때, 10MW일 때 각각의 총 비용은 1200달러, 1900달러, 1000달러였다. 예측이 정확할 때의 비용까지 고려한 단일 예측의 기대비용은 900 + 1200 + 1900 + 1000 을 4로 나눈 값, 1250달러이다. 즉 stochastic market clearing을 통해, (위 4개 시나리오만 있다고 가정할 경우의) 기대비용을 1250달러에서 1000달러로 줄일 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;stochastic-market-clearing의-실제-적용-가능성은&quot;&gt;Stochastic market clearing의 실제 적용 가능성은?&lt;/h2&gt;

&lt;p&gt;Stochastic market clearing은 재생발전 비중이 높은 상황에서 전력 공급의 기대비용을 줄일 수 있음에도 불구하고, 실제 현실에서는 쓰이지 않고 있다. 그 이유로 아래의 세 가지를 들 수 있다.&lt;/p&gt;

&lt;p&gt;1) 시나리오 수가 많을 경우의 계산비용 증가: 현실에서는 시나리오 수가 4개보다는 훨씬 많을 것이다. 특히 위 예제에서는 편의상 한 시간에 대해서만 문제를 구성하였으나, 실제 하루전 시장에서는 24시간에 대해 문제를 구성해야 한다. 그러므로 불확실성을 ‘충분히 표현하기 위한’ 시나리오의 수는 수천, 수만 개가 될 수도 있다 (여러 개의 재생발전원들을 고려하는 경우 시나리오 수는 더 많아진다). 하루전 시장에서는 말 그대로 ‘하루 전에’ 모든 계산이 끝나야 하므로, 계산시간은 중요한 이슈이다.&lt;/p&gt;

&lt;p&gt;2) 시나리오 설정 방법에 대해 모든 전력시장 참가자들이 합의할 수 있을지 여부: 재생발전량 시나리오를 어떻게 생성할 것인지 (생성 기반이 되는 분포, 시나리오별 확률 등) 에 대한 의견이 참가자마다 다 다를 것이다. 특정 방법이 누군가에겐 유리하겠지만 누군가에겐 불리하기 때문이다. 게다가 재생발전량의 ‘true data generating process’ 를 모르기 때문에, 누구의 의견이 더 합리적인지 판단하기도 어렵다.&lt;/p&gt;

&lt;p&gt;3) Cost recovery가 충족되지 않음: stochastic market clearing 수행 시 일부 참가자들이 operation cost 측면에서 ‘손해’를 볼 수 있음이, 즉 cost recovery가 충족되지 않음이 알려저 있다. 이 대문에 stochastic market clearing은 실질적인 측면 뿐 아니라 이론적인 측면에서도 차세대(?) 전력시장 모델로 받아들여지지 못하고 있다.&lt;/p&gt;

&lt;p&gt;다만 stochastic market clearing은 일종의 ‘benchmark’로 볼 수 있다. 학계에서는 이러한 benchmark를 고려해 단일 예측 기반의 market clearing mechanism을 향상시키려는 시도가 이루어지고 있다.&lt;/p&gt;

&lt;p&gt;(추천 책: &lt;a href=&quot;https://link.springer.com/book/10.1007/978-1-4614-9411-9&quot;&gt;Integrating Renewables in Electricity Markets: Operational Problems&lt;/a&gt;)&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;b&gt; Stochastic market clearing&lt;/b&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 19 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalalfive.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalalfive.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 3) Desirable properties of market-clearing mechanisms</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 3강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/hhtOAsXlxq8&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;market-clearing-mechanism이-추구하는-4가지-성질들&quot;&gt;Market clearing mechanism이 추구하는 4가지 성질들&lt;/h2&gt;

&lt;p&gt;1강에서는 market clearing이 social welfare를 최대화하는 최적화 문제의 풀이 결과임을 보였고, 2강에서는 최적화 결과가 Nash 균형이므로 어떤 참가자도 해당 결과를 받아들일 것임을 보였다.&lt;/p&gt;

&lt;p&gt;이는 market clearing mechanism이 ‘market efficiency’ 성질을 충족한다고도 볼 수 있다.&lt;/p&gt;

&lt;p&gt;Market clearing mechanism이 추구하는 성질은 market efficiency를 포함해 4개가 있다.&lt;/p&gt;

&lt;p&gt;1) Market efficiency : Social welfare가 최대화되고, 각 참가자들이 받아들일 수 있는 결과가 도출된다.&lt;/p&gt;

&lt;p&gt;2) Incentive compatibility : 각 참가자들이 자신의 정보를 왜곡 없이 그대로 제공하는 것이 각자에게 최선임을 의미한다.
이를테면 어떤 발전기의 발전단가가 MWh당 12달러일 경우, offering을 MWh당 12달러보다 높은 값이 아닌 12달러 그대로 하는 것이 본인에게 있어 최선의 전략인 경우를 말한다.&lt;/p&gt;

&lt;p&gt;여기서 offering을 ‘일부러’ 발전단가보다 높이 불러 (즉 거짓 정보를 제공해서) 수익 증대를 추구하는 것을 ‘전략적인 (strategic)’ 행동이라 하며, ‘exercising market power’라는 표현도 쓴다.&lt;/p&gt;

&lt;p&gt;3) Cost recovery : 모든 참가자들이 최소한 각자의 operational cost는 건질 수 있음을, 즉 모든 참가자들에 대해 각자의 non-negative profit이 보장됨을 의미한다. (단, 이는 capital cost 회수 가능 여부와는 무관하다)&lt;/p&gt;

&lt;p&gt;4) Revenue adequacy : Market operator가 operation 수행 시 최소한 손해는 보지 않음을 의미한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture3_11.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture3_14.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture3_16.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture3_19.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lmp-based-market에서-충족되는-성질들은&quot;&gt;LMP-based market에서 충족되는 성질들은?&lt;/h2&gt;

&lt;p&gt;안타깝게도, 위 4개 성질들을 ‘전부 다’ 충족하는 것은 불가능하다 (Hurwicz theorem으로 증명됨).&lt;/p&gt;

&lt;p&gt;그렇다면 1강부터 설명한 LMP (Local Marginal Price) based market에서는 위 4가지 성질들 중 어떤 성질이 충족되고 어떤 성질은 충족되지 않을까?&lt;/p&gt;

&lt;p&gt;충족되지 않는 성질은 incentive compatibility와 market efficiency이다.&lt;/p&gt;

&lt;p&gt;극단적인 예로 발전기와 수요처가 하나씩인 시장이 있다고 하자. 이 때 수요처의 bid price를 발전기가 알고 있을 경우, 발전기는 offer price를 자신의 발전단가가 아니라 수요처의 bid price로 제시하는 ‘strategic offering’ 을 할 것이다. 따라서 incentive compatibility가 깨진다.&lt;/p&gt;

&lt;p&gt;이러한 strategic offering을 할 경우 market-clearing price는 이전과 달라진다. 이전에는 모든 발전기가 offer price를 각자의 발전단가로 제시했고 그 결과 social welfare가 최대화되었으나, price가 달라지므로 더 이상 social welfare가 최대화되지 않는다. 따라서 market efficiency도 깨진다.&lt;/p&gt;

&lt;p&gt;충족되는 성질은 revenue adequacy와 cost recovery이다. (단, cost recovery 충족은 뒤에서 볼 unit commitment (UC) 제약을 고려하지 않았을 때 성립한다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture3_28.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;unit-commitment-제약을-고려한-market-clearing&quot;&gt;Unit commitment 제약을 고려한 market clearing&lt;/h2&gt;

&lt;p&gt;1강의 최적화 문제에서는 발전기의 ramping limit, 최소부하, 시동비용, 최소기동유지시간 및 최소정지유지시간 등의 unit commitment (UC) 제약들을 고려하지 않았다.&lt;/p&gt;

&lt;p&gt;UC 제약을 추가하면 어떻게 될까? Ramping limit을 제외한 나머지 제약들이 이진변수 (binary variable) 들을 포함하므로 UC 제약을 문제에 추가하면 mixed-integer 문제가 된다. Mixed-integer 문제에서는 dual variable을 계산할 수 없으므로, market clearing price를 도출할 수 없다 (discrete feasible space에 대해서 sensitivity를 정의하기 곤란함)&lt;/p&gt;

&lt;p&gt;실제 적용에서는, 우선 UC 조건을 고려하는 문제를 풀어 이진변수들의 값을 얻고, 해당 이진변수들 값을 고정한 상태에서 다시 문제를 풀어 dual variable들을 계산한다. 미국에서는 independent system operator (ISO) 가 각 발전기 별 UC 제약들을 받아서 UC 문제를 푼다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture3_52.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture3_56.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;단, 이진변수의 값을 고정하면 market clearing price 결정에 (이진변수로만 반영할 수 있는) 시동비용 정보를 반영할 수 없다. 시동비용도 operation cost이므로, 이는 cost recovery 성질을 충족하지 못함을 의미한다. 시동비용의 비중이 큰 원자력/ 석탄화력 발전소에게 있어 이는 중요한 이슈이다.&lt;/p&gt;

&lt;p&gt;이 때문에 uplift mechanism 등의 side payment를 운용하여 cost recovery를 보장할 수 있도록 한다.&lt;/p&gt;

&lt;h2 id=&quot;uc-제약에-대해-참고하면-좋은-문헌들&quot;&gt;UC 제약에 대해 참고하면 좋은 문헌들&lt;/h2&gt;

&lt;p&gt;UC 제약은 다수의 이진변수를 포함하므로 최적화 문제 풀이 시간을 크게 증가시키거나 심지어는 현실적인 시간 내에 풀리지 않게 (intractable) 만드는 주범이다. 이 때문에 UC 제약을 다루는 데 대한 연구들이 수행되어 왔다.&lt;/p&gt;

&lt;p&gt;참고할 만한 문헌들은 아래와 같다.&lt;/p&gt;

&lt;p&gt;1) &lt;a href=&quot;https://doi.org/10.1109/TPWRS.2006.876672&quot;&gt;A computationally efficient mixed-integer linear formulation for the thermal unit commitment problem&lt;/a&gt;&lt;br /&gt;
2) &lt;a href=&quot;https://doi.org/10.1109/TPWRS.2011.2162008&quot;&gt;Tight Mixed Integer Linear Programming Formulations for the Unit Commitment Problem&lt;/a&gt;&lt;br /&gt;
3) &lt;a href=&quot;https://doi.org/10.1561/3100000014&quot;&gt;Unit Commitment in Electric Energy Systems&lt;/a&gt;&lt;br /&gt;
4) &lt;a href=&quot;https://doi.org/10.1109/TPWRS.2017.2735026&quot;&gt;Representing Operational Flexibility in Generation Expansion Planning Through Convex Relaxation of Unit Commitment&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;a href=&quot;/jalaltwo.html&quot;&gt; Market clearing as an equilibrium problem&lt;/a&gt; &lt;br /&gt;
03) &lt;b&gt; Desirable properties of market-clearing mechanisms&lt;/b&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 15 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalalthree.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalalthree.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
      <item>
        <title>에너지시스템 최적화/게임이론 강의: 2) Market clearing as an equilibrium problem</title>
        <description>&lt;p&gt;이 포스팅은, Technical University of Denmark의 박사과정 과목 “Advanced Optimization and Game Theory for Energy Systems” (Prof. Jalal Kazempour) 의 2강을 필자가 요약한 내용이다.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com --&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/Dg64manEFRY&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://www.jalalkazempour.com/teaching&quot;&gt;Course slides 링크&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;최적화-기반-market-clearing-결과는-game의-nash-균형인가&quot;&gt;최적화 기반 market clearing 결과는 game의 ‘Nash 균형’인가?&lt;/h2&gt;

&lt;p&gt;지난 강의에서 최적화 문제를 풀어서 각 발전기의 발전량, 각 수요처의 전기부하, 그리고 가격을 결정했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture2_5.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런데, 과연 각 발전사업자와 각 수요처 각자의 입장에서, 해당 최적화 문제의 결과가 ‘받아들일 만한’ 것일까? 받아들이지 못할 결과라면 참가자들이 시장에서 떠나는 (deviate) 문제가 발생할 것이다.&lt;/p&gt;

&lt;p&gt;각 발전기는 발전량에 market price를 곱한 revenue에서 발전 비용을 뺀 profit을 최대화하려 할 것이고,
각 수요처는 부하량에 bid price와 market price 간 차이를 곱한 utility를 최대화하려 할 것이다.&lt;/p&gt;

&lt;p&gt;위 최적화 결과로 얻은 각 발전기 별 발전량, 각 수요처 별 부하량, 그리고 시장가격이 주어질 경우,
어떤 참가자에 대해서도 (다른 참가자가 현재 상태를 유지한다는 전제 하에) 현재 상태가 profit 또는 utility를 최대화하는 상태여야 한다.&lt;/p&gt;

&lt;p&gt;즉 각 발전기와 수요처를 ‘game의 참가자’ 로 볼 때, 위 최적화 문제를 풀어 얻은 결과가 해당 game의 (유일한) Nash 균형이어야 한다.&lt;/p&gt;

&lt;p&gt;(‘유일한’ Nash 균형이 아닐 경우 갈등이 생길 수 있다. 어떤 참가자가 “나한테는 균형 1이 더 좋은데 왜 market operator 당신은 균형 2로 결정했냐” 등…)&lt;/p&gt;

&lt;p&gt;각 참가자 ‘개별’의 최적화 문제들 모은 Nash 균형 문제를 보면 아래 슬라이드와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture2_26.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;발전기와 수요처 뿐 아니라 price-setter가 있는데, 이는 수요-공급 균형 제약을 고려하면서 동시에 가격을 결정하기 위한 가상의 참가자이다.&lt;/p&gt;

&lt;h2 id=&quot;전력시장의-nash-균형-문제는-최적화-문제와-동치이다&quot;&gt;전력시장의 Nash 균형 문제는 최적화 문제와 동치이다&lt;/h2&gt;

&lt;p&gt;최적화 문제를 풀어 얻은 결과가 Nash 균형인지 여부를 판단하려면, 최적화 문제와 Nash 균형 문제가 수학적으로 동치 (equivalent problem) 인지 여부를 판단할 수 있는 비교가 필요하다.&lt;/p&gt;

&lt;p&gt;이를 위해서는, 최적화 문제의 KKT (Karush-Kuhn-Tucker) condition과 Nash 균형 문제의 각 참가자 별 KKT condition들의 모음을 서로 비교한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture2_47.png&quot; alt=&quot;clearingexample&quot; /&gt;
&lt;img src=&quot;/assets/images/jalal/Lecture2_51.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 두 그림을 보면, 두 문제의 KKT condition이 서로 같으므로 두 문제는 동치이다.&lt;/p&gt;

&lt;p&gt;그러므로 market operator가 최적화 문제를 풀면 그 결과는 Nash 균형이다.&lt;/p&gt;

&lt;p&gt;일반적으로 각 참가자들의 목적함수를 모두 고려하는 game의 Nash 균형 문제를 푸는 것 보다는 단일 최적화 문제를 푸는 것이 더 쉬우므로, Nash 균형 문제와 최적화 문제 간 동치는 market clearing을 실제로 가능하게 해 주는 좋은 성질이다.&lt;/p&gt;

&lt;p&gt;여러 개의 bus가 있어 각 nodal price를 결정하는 경우에도 Nash 균형 문제를 아래와 같이 구성할 수 있다 (DC flow approximation임에 유의).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jalal/Lecture2_55.png&quot; alt=&quot;clearingexample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 때 두 bus 간 nodal price가 다른 경우, transmission owner는 일종의 공간적 차익거래 (spatial arbitrage) 를 추구한다.&lt;/p&gt;

&lt;p&gt;이를테면 bus 1과 bus 2 각각의 nodal price가 $\lambda_1$과 $\lambda_2$이고, 두 bus 간 susceptance가 $B$, 각 bus에서의 voltage angle이 $\theta_1$과 $\theta_2$인 경우, transmission owner의 목적함수는 $(\lambda_2 - \lambda_1) B (\theta_1 - \theta_2)$ 가 되어, $\lambda_2$와 $\lambda_1$ 간에 차이가 있을 경우 (계통혼잡이 있을 경우 nodal price들이 서로 달라짐) 에 공간적 차익에 의한 profit을 벌 수 있다.&lt;/p&gt;

&lt;p&gt;이러한 차익 중 일부를 가져갈 권리를 financial transmission rights (FTR) 이라 하며, 실제로 미국에서는 매년 초에 각 송전선 별 FTR을 경매로 판매한다. FTR 구매자 입장에서는 계통혼잡에 의한 nodal price 상승 risk를 hedging할 수 있고, FTR 판매자 입장에서는 연초에 고정수익을 확보할 수 있다.&lt;/p&gt;

&lt;div class=&quot;notice--info&quot;&gt;

Advanced Optimization and Game Theory for Energy Systems 강의 요약&lt;br /&gt;&lt;br /&gt;

01) &lt;a href=&quot;/jalalone.html&quot;&gt; Market clearing as an optimization problem&lt;/a&gt; &lt;br /&gt;
02) &lt;b&gt; Market clearing as an equilibrium problem&lt;/b&gt; &lt;br /&gt;
03) &lt;a href=&quot;/jalalthree.html&quot;&gt; Desirable properties of market-clearing mechanisms&lt;/a&gt; &lt;br /&gt;
04) Market clearing using a cooperative game approach &lt;br /&gt;
05) &lt;a href=&quot;/jalalfive.html&quot;&gt; Stochastic market clearing&lt;/a&gt; &lt;br /&gt;
06) &lt;a href=&quot;/jalalsix.html&quot;&gt; Robust approaches for market clearing&lt;/a&gt; &lt;br /&gt;
07) &lt;a href=&quot;/jalalseven.html&quot;&gt; Bilevel programming in energy systems&lt;/a&gt; &lt;br /&gt;
08) &lt;a href=&quot;/jalaleight.html&quot;&gt; Optimization problems with decomposable structure&lt;/a&gt; &lt;br /&gt;
09) &lt;a href=&quot;/jalalnine.html&quot;&gt; Benders’ decomposition: Theory&lt;/a&gt; &lt;br /&gt;
10) &lt;a href=&quot;/jalalten.html&quot;&gt; Benders’ decomposition: Applications&lt;/a&gt; &lt;br /&gt;
11) &lt;a href=&quot;/jalaleleven.html&quot;&gt; Augmented Lagrangian relaxation&lt;/a&gt; &lt;br /&gt;
12) &lt;a href=&quot;/jalaltwelve.html&quot;&gt; Variants of ADMM and applications&lt;/a&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 12 Aug 2023 00:00:00 +0900</pubDate>
        <link>https://song4energyndata.github.io/jalaltwo.html</link>
        <guid isPermaLink="true">https://song4energyndata.github.io/jalaltwo.html</guid>
        
        <category>최적화</category>
        
        <category>게임이론</category>
        
        <category>에너지시스템</category>
        
        
        <category>market</category>
        
      </item>
    
  </channel>
</rss>
